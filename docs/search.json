[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lorenz Thomschke. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thomschke L (2022). apiur: VALUE market data API using R. R package version 0.1.0.","code":"@Manual{,   title = {apiur: VALUE market data API using R},   author = {Lorenz Thomschke},   year = {2022},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"apiur","dir":"","previous_headings":"","what":"VALUE market data API using R","title":"VALUE market data API using R","text":"goal apiur …","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"VALUE market data API using R","text":"can install development version apiur like :","code":"# FILL THIS IN! HOW CAN PEOPLE INSTALL YOUR DEV PACKAGE?"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"VALUE market data API using R","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples. can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(apiur) #> Connected to https://avm-api-stage.value-marktdaten.de/ #> Connected to https://avm-api-stage.value-marktdaten.de/v1 [version v1] #>  ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"/reference/access.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up connection to API — access","title":"Set up connection to API — access","text":"Using access() can connect valid licensed API VALUE Marktdaten.","code":""},{"path":"/reference/access.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up connection to API — access","text":"","code":"access(   server = c(\"stage\", \"develop\", \"live\"),   version = c(\"v1\"),   username = Sys.getenv(\"APIUSER\"),   password = Sys.getenv(\"APIPW\") )"},{"path":"/reference/access.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up connection to API — access","text":"server One valid servers `live` default. version desired version AVM API, see Swagger Documentation get valid versions. username character vector username Sys.getenv(\"APIUSER\") default. password character vector password Sys.getenv(\"APIPW\") default.","code":""},{"path":"/reference/access.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set up connection to API — access","text":"must valid license.","code":""},{"path":"/reference/access.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up connection to API — access","text":"","code":"access(username = Sys.getenv(\"APIUSER\"), password = Sys.getenv(\"APIPW\")) ## Connected to https://avm-api-stage.value-marktdaten.de/ ## Connected to https://avm-api-stage.value-marktdaten.de/v1 [version v1]"},{"path":[]},{"path":"/reference/avm.examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Example values from AVM API — avm.examples","title":"Example values from AVM API — avm.examples","text":"Get example values example requests.","code":""},{"path":"/reference/avm.examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example values from AVM API — avm.examples","text":"","code":"avm.examples()"},{"path":"/reference/avm.examples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example values from AVM API — avm.examples","text":"object class data.frame.","code":""},{"path":"/reference/avm.examples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example values from AVM API — avm.examples","text":"Based provided exampleRequests, get output values. values contain several formats numbers dates. provide unique column, decided transform values characters.","code":""},{"path":"/reference/avm.examples.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Example values from AVM API — avm.examples","text":"function assumes environment variables APIUSER, APIPW valid license exist.","code":""},{"path":"/reference/avm.examples.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example values from AVM API — avm.examples","text":"","code":"#str(avm.examples())"},{"path":[]},{"path":"/reference/avm.meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta data from AVM API — avm.meta","title":"Meta data from AVM API — avm.meta","text":"Functions receive meta data AVM API.","code":""},{"path":"/reference/avm.meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta data from AVM API — avm.meta","text":"","code":"avm.status()  avm.endpoints()  avm.endpoints.all()  avm.segments()"},{"path":"/reference/avm.meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meta data from AVM API — avm.meta","text":"object class data.frame.","code":""},{"path":"/reference/avm.meta.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Meta data from AVM API — avm.meta","text":"avm.status: Get information AVM status. avm.endpoints: Get information AVM endpoints access granted. avm.endpoints.: Get information AVM endpoints. avm.segments: Get segments AVM endpoint.","code":""},{"path":"/reference/avm.meta.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Meta data from AVM API — avm.meta","text":"function assumes environment variables APIUSER, APIPW valid license exist.","code":""},{"path":"/reference/avm.meta.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meta data from AVM API — avm.meta","text":"","code":"colnames(avm.endpoints()) ## [1] \"indication\"       \"relativeUrl\"      \"fullUrl\"          \"specificationUrl\" ## [5] \"titleDe\"          \"titleEn\"          \"descriptionDe\"    \"descriptionEn\"    ## [9] \"accessGranted\""},{"path":[]},{"path":"/reference/avm.specifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Specifications from AVM API — avm.specifications","title":"Specifications from AVM API — avm.specifications","text":"Function receive information valid specifications AVM API.","code":""},{"path":"/reference/avm.specifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specifications from AVM API — avm.specifications","text":"","code":"avm.specifications(endpoints = NULL, segments = NULL, language = c(\"EN\", \"DE\"))"},{"path":"/reference/avm.specifications.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Specifications from AVM API — avm.specifications","text":"object class list() including data.frames","code":""},{"path":"/reference/avm.specifications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specifications from AVM API — avm.specifications","text":"endpoints vector endpoints. See also avm.endpoints get valid endpoints. segments vector segments. See also avm.segments get valid segments. language Specification english german language used format character columns englisch settings DEFAULT. set `DE`, big (`.`) decimal (`,`) marks set dates `dd.mm.yyy`.","code":""},{"path":"/reference/avm.specifications.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specifications from AVM API — avm.specifications","text":"returns list data frames input parameters including input categories  output paramaters including information JSON output. Columns example, minimal maximal values might also contain dates, return characters.","code":""},{"path":"/reference/avm.specifications.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Specifications from AVM API — avm.specifications","text":"function assumes environment variables `APIUSER`, `APIPW`, `AVMURL` `AVMV` valid license exist.","code":""},{"path":[]},{"path":"/reference/getpost.html","id":null,"dir":"Reference","previous_headings":"","what":"Requests from AVM — getpost","title":"Requests from AVM — getpost","text":"Functions set requests VALUE marketdata API AVM.","code":""},{"path":"/reference/getpost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Requests from AVM — getpost","text":"","code":"avm.response(path = NULL, type = c(\"GET\", \"POST\", \"HEAD\"), json = NULL)"},{"path":"/reference/getpost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Requests from AVM — getpost","text":"path Path desired endpoint. json Request body JSON format. ... Additional arguments passed httr::GET() httr::POST().","code":""},{"path":"/reference/getpost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Requests from AVM — getpost","text":"object class apiur.response.","code":""},{"path":"/reference/getpost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Requests from AVM — getpost","text":"(internal) functions helpers start API AVM requests. require valid credentials access VALUE Marktdaten API. See access set access.","code":""},{"path":"/reference/getpost.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Requests from AVM — getpost","text":"avm.response: Initialize GET request.","code":""},{"path":"/reference/getpost.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Requests from AVM — getpost","text":"httr::content() use UTF-8 encoding.","code":""},{"path":"/reference/getpost.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Requests from AVM — getpost","text":"","code":"class(avm.response(path = \"status\")) ## [1] \"apiur.response\""},{"path":[]},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""}]
